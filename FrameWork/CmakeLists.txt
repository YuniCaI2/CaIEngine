cmake_minimum_required(VERSION 3.16)

set(CMAKE_CXX_STANDARD 23)

project(FrameWork)

find_package(Vulkan REQUIRED)
find_package(assimp REQUIRED)
find_package(glfw3 REQUIRED)
find_package(EnTT CONFIG REQUIRED)

if(WIN32)
    find_package(imgui CONFIG REQUIRED)
    find_package(directxtex CONFIG REQUIRED)
elseif(APPLE)
    set(MacOSImGuiPath "/Users/yunicai/Code_file/include/imgui/")
    add_library(imgui_lib STATIC
            ${MacOSImGuiPath}/imgui.cpp
            ${MacOSImGuiPath}/imgui_draw.cpp
            ${MacOSImGuiPath}/imgui_tables.cpp
            ${MacOSImGuiPath}/imgui_widgets.cpp
            ${MacOSImGuiPath}/backends/imgui_impl_glfw.cpp
            ${MacOSImGuiPath}/backends/imgui_impl_vulkan.cpp
    )
    target_include_directories(imgui_lib PUBLIC
            ${MacOSImGuiPath}
            ${MacOSImGuiPath}/backends
    )
    target_link_libraries(imgui_lib PUBLIC
            glfw
            Vulkan::Vulkan
            assimp::assimp
    )
endif()

add_subdirectory(thirdPart)

file(GLOB frameWorkPath
        "${CMAKE_CURRENT_SOURCE_DIR}/*.h"
        "${CMAKE_CURRENT_SOURCE_DIR}/*.cpp"
)

file(GLOB frameGraphPath
        "${CMAKE_CURRENT_SOURCE_DIR}/FrameGraph/*.h"
        "${CMAKE_CURRENT_SOURCE_DIR}/FrameGraph/*.cpp"
)

file(GLOB uniformPassPath
        "${CMAKE_CURRENT_SOURCE_DIR}/FrameGraph/UniformPass/*.h"
        "${CMAKE_CURRENT_SOURCE_DIR}/FrameGraph/UniformPass/*.cpp"
)

file(GLOB ECSPath
        "${CMAKE_CURRENT_SOURCE_DIR}/ECS/Components/*.h"
        "${CMAKE_CURRENT_SOURCE_DIR}/ECS/Components/*.cpp"
        "${CMAKE_CURRENT_SOURCE_DIR}/ECS/Systems/*.cpp"
        "${CMAKE_CURRENT_SOURCE_DIR}/ECS/Systems/*.h"
)

add_library(FrameWork ${frameWorkPath} ${frameGraphPath} ${uniformPassPath} ${ECSPath}
        CaIMaterial.cpp
        CaIMaterial.h
        CaIShader.cpp
        CaIShader.h
        FrameGraph/ResourceManager.cpp
        FrameGraph/ResourceManager.h
        FrameGraph/RenderPassManager.cpp
        FrameGraph/RenderPassManager.h
        FrameGraph/FrameGraph.cpp
        FrameGraph/FrameGraph.h
        CompMaterial.cpp
        CompMaterial.h
        CompShader.cpp
        CompShader.h
)

# 基础库链接（所有平台共用）
target_link_libraries(FrameWork PUBLIC
        glfw
        Vulkan::Vulkan
        assimp::assimp
        EnTT::EnTT
)

# 平台特定的库和配置
if(WIN32)
    target_link_libraries(FrameWork PUBLIC imgui::imgui)
    target_link_libraries(FrameWork PRIVATE Microsoft::DirectXTex)
elseif(APPLE)
    target_link_libraries(FrameWork PUBLIC imgui_lib)
    target_include_directories(FrameWork PUBLIC ${MacOSImGuiPath} ${MacOSImGuiPath}/backend)
endif()

# 第三方库头文件路径
target_include_directories(FrameWork PUBLIC
        ${CMAKE_CURRENT_SOURCE_DIR}/thirdPart/glm
        ${CMAKE_CURRENT_SOURCE_DIR}/thirdPart/stb
)

# 保证target_link_library可以找到FrameWork
target_include_directories(FrameWork INTERFACE
        ${CMAKE_CURRENT_SOURCE_DIR}/
)