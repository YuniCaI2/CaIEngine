Settings {
    Blend SrcAlpha OneMinusSrcAlpha
    BlendOp Add
    Cull Back
    ZTest LessOrEqual
    ZWrite On
}

Vertex {
    Input{
        0 vec3 inPos
        1 vec3 inNormal
        2 vec3 inTangent
        3 vec2 inTexCoord
    }
    Output{
        2 vec2 vTexCoord
        4 float vIntensity
    }
    Properties {
        mat4 viewMatrix
        mat4 projectionMatrix
        mat4 modelMatrix
        float intensity
    }
    Program{
        void main()
        {
            vec4 worldPos = modelMatrix * vec4(inPos, 1.0);
            gl_Position = projectionMatrix * viewMatrix * worldPos;
            vTexCoord = inTexCoord;
            vIntensity = intensity;
        }
    }
}

Fragment{
    Input{
        2 vec2 vTexCoord
        4 float vIntensity
    }
    Output{
        0 vec4 outColor
    }
    Properties {
        sampler2D colorSampler
    }
    Program{


        void main()
        {
            vec3 baseColor = vec3(texture(colorSampler, vTexCoord));
            outColor = vec4(vec3(baseColor * vIntensity), 1.0);
        }
    }
}