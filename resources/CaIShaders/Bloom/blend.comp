#version 450 core

layout (binding = 0) uniform UniformBufferObject {
    vec2 invDstScale;
    vec2 dstScale;
} _UBO;

layout (binding = 1) uniform sampler2D srcImage;


layout(binding = 2, rgba16f) uniform  image2D dstImage;


layout (local_size_x = 16, local_size_y = 16, local_size_z = 1 ) in;

    float luminance(vec3 c) {
        //此计算出亮度更符合人眼
        return dot(c, vec3(0.2126, 0.7152, 0.0722));
    }

    vec3 ACEStonemap(vec3 hdr) {
        float a = 2.51;
        float b = 0.03;
        float c = 2.43;
        float d = 0.59;
        float e = 0.14;
        return clamp((hdr * (a * hdr + b)) / (hdr * (c * hdr + d) + e), 0.0, 1.0);
    }

    void main(){
        ivec2 p = ivec2(gl_GlobalInvocationID.xy);
        if (any(greaterThanEqual(p, _UBO.dstScale))) return;

        vec2 uv = (vec2(p) + 0.5) * _UBO.invDstScale;
        vec3 c  = textureLod(srcImage, uv, 0).rgb;
        vec3 prev = imageLoad(dstImage, p).rgb;

        //vec3 outC = c + prev;
        vec3 outC = 0.1 * c + 0.9 * prev;
        outC = ACEStonemap(outC);

        imageStore(dstImage, p, vec4(outC, 1.0));
    }
